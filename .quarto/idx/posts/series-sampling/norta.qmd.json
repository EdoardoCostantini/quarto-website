{"title":"Normal to anything (NORTA) sampling","markdown":{"yaml":{"draft":false,"title":"Normal to anything (NORTA) sampling","author":"Edoardo Costantini","date":"2022-10-26","slug":"norta","categories":["distributions"],"bibliography":"../../resources/bibshelf.bib"},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\nThe Normal to anything (or NORTA) is a sampling approach that allows the generation of multivariate data with a known rank correlation structure and arbitrary marginal distributions.\nFor example, you could generate 2 variables $X_1$ and $X_2$ with a given rank correlation and [beta](https://en.wikipedia.org/wiki/Beta_distribution) marginal distributions.\nThe only requirement is that the target marginal distributions need to be continuous distributions with a known [(inverse) cumulative distribution function](https://en.wikipedia.org/wiki/Quantile_function).\n\n# Learn by coding\n\nFor this topic we will need a few packages:\n\n```{r packages, warning = FALSE, message = FALSE}\n# Load pacakges ---------------------------------------------------------------\n\nlibrary(SimCorMultRes)\nlibrary(MASS)\nlibrary(ggplot2)\nlibrary(ggExtra) # for marginal plots\nlibrary(e1071)\nlibrary(sn) # for skewed normal distribution\n\n```\n\nThe NORTA approach can be summarized in three steps:\n\n  1. Sample a data matrix $X_{n \\times p}$ from a Multivariate Normal distribution with target correlation structure\n  2. Transform the distributions of the individual variables $x_j$ for $j = 1, \\dots, p$ (the marginal distributions) to a uniform distribution by applying the normal [CDF](https://en.wikipedia.org/wiki/Cumulative_distribution_function) to $X$ (in R `pnorm()`)\n  3. Transform the uniform marginals to any continuous target distributions by applying the inverse CDF of the target distribution (usually implemented in R by a `qtarget()` function, for example, `qbeta`)\n\n## 1. Sample from a multivariate normal distribution\n\nFirst, we sample 1000 observations from a multivariate normal distribution with four correlated variables ($\\rho = .7$).\n\n```{r MVN}\n# 1. Sample from multivariate normal distribution -----------------------------\n\n# Set the seed\nset.seed(20210422)\n\n# Fix parameters\nn <- 1e3 # smaple size\np <- 2  # number of variables\nmu <- rep(0, p) # vector of means\nSigma <- matrix(.7, nrow = p, ncol = p); diag(Sigma) <- 1 # correlation matrix\n\n# Sample Multivariate Normal data\nX <- mvrnorm(n = n, mu = mu, Sigma = Sigma)\n\n```\n\nWe can then plot a scatterplot of $X_1$ and $X_2$ to study their multivariate distribution and make the marginal plots visible.\n\n```{r}\n# Plot the multivariate distribution (scatterplot)\nX_scatter <- ggplot(data.frame(X), aes(x = X1, y = X2)) +\n      geom_point()\n\n# Add marginals of X\nggMarginal(X_scatter, type = \"histogram\") \n\n```\n\nWe can now transform the marginal distributions of the $x$s to any target continuous distribution.\n\n## 2. Transform normal marginals into uniform\n\nFor example, consider transforming the marginals to a beta distribution. \n\nFirst, we compute the values of the normal cumulative distribution function (`pnorm()`).\n```{r uniform}\n# 2. Transform marginals to a uniform distribution -----------------------------\n\n# Transform to uniform distribution (apply normal CDF to X)\nU <- pnorm(X) \n\n# Make scatterplot\nU_scatter <- ggplot(data.frame(U), aes(x = X1, y = X2)) +\n      geom_point()\n\n# Add marginals of U\nggMarginal(U_scatter, type = \"histogram\") \n\n```\n\n## 3. Transform uniform marginals into anything\n\nThen we compute the quantiles corresponding to the resulting cumulative probabilities based on the target marginal distribution using the `qbeta()` function.\n\n```{r beta}\n# 3. Transform marginals to anything with a (inverse) CDF ----------------------\n\n# > 3.1 Beta -------------------------------------------------------------------\n\n# Transform to a beta distribution\nX_beta <- qbeta(U, shape1 = .5, shape2 = .5)\n\n# And visualize\nX_beta_scatter <- ggplot(data.frame(X_beta), aes(x = X1, y = X2)) +\n      geom_point()\nggMarginal(X_beta_scatter, type = \"histogram\") \n\n```\n\nAs another example, consider transforming the marginal to a highly skewed T distribution.\n\n```{r skew}\n# > 3.2 Skewed-t distribution --------------------------------------------------\n\n# Define the target skewness and kurtosis\nsk <- -2\nkt <- 10\n\n# Define direct parameterization for the skew-t (ST) distribution\ncpST <- c(0, 1, sk, kt)\ndpST <- cp2dp(cpST, family = \"ST\")\n\n# Transform to Skew-t (apply target inverse-CDF to X)\nX_st <- apply(U, 2, qst, dp = dpST)\n\n# And visualize\nX_st_scatter <- ggplot(data.frame(X_st), aes(x = X1, y = X2)) +\n      geom_point()\nggMarginal(X_st_scatter, type = \"histogram\") \n\n```\n\n### 3.1 Preserved multivariate relationships\n\nUpon generating the multivariate data $\\mathbf{X}$, the association between the two variables $X_1$ and $X_2$ is determined by the correlation coefficient $\\rho$ that we used in the `mvrnorm()` call.\nThis coefficient expresses the linear dependence between the two variables which is not preserved when non-linear transformations are applied to the marginals (which we use).\nHowever, the NORTA approach does preserve [rank correlations](https://en.wikipedia.org/wiki/Rank_correlation) between the variables.\nIn the following code, we compute the Pearson correlation (linear dependency), and the Spearman and Kendall's correlations (rank correlations) for the original data, and all other transformations.\n\n```{r}\n# Collect all sampled datasets\ndats <- list(X = X, U = U, skewt = X_st, beta = X_beta)\n\n# Compute all types of correlation on all datasets\nround(\n      data.frame(\n            Pearson = sapply(dats, function(i) cor(i, method = \"pearson\")[1,2]),\n            Spearman = sapply(dats, function(i) cor(i, method = \"spearman\")[1,2]),\n            Kendall = sapply(dats, function(i) cor(i, method = \"kendall\")[1,2])\n      ), 3\n)\n\n```\n\nAs you can see, the NORTA sampling approach allows us to easily sample dependent multivariate data with arbitrary marginal distributions and known target (rank) correlations.\n\n### 3.2 Discrete distributions\n\nOne can be tempted to use any marginal distribution, even discrete distributions. However, the rank correlation is not preserved when this marginal transformation is applied.\nConsider for example transforming the marginals to Poisson distributions:\n\n```{r poissan}\n# > 3.3 Poissan distribution ---------------------------------------------------\n\n# Transform to poissan (apply target inverse-CDF to X)\nX_pois <- qpois(U, lambda = 2)\n\n# And visualize\nX_pois_scatter <- ggplot(data.frame(X_pois), aes(x = X1, y = X2)) +\n      geom_point()\nggMarginal(X_pois_scatter, type = \"histogram\") \n\n```\n\nor to binomial distributions\n\n```{r binomial}\n# > 3.4 Binomial distribution ---------------------------------------------------\n\n# Transform to binomial\nX_binom <- qbinom(U, size = 6, prob = .2)\n\n# And visualize\nX_binom_scatter <- ggplot(data.frame(X_binom), aes(x = X1, y = X2)) +\n      geom_point()\nggMarginal(X_binom_scatter, type = \"histogram\") \n\n```\n\nif you check again both the linear and rank correlations you will notice that both have been impacted by these transformations:\n\n```{r}\n# Add the other datasets\ndats <- list(\n            X = X, \n            U = U, \n            skewt = X_st, \n            beta = X_beta, \n            poissan = X_pois, \n            binomial = X_binom\n)\n\n# Compute all types of correlation on all datasets\nround(\n      data.frame(\n            Pearson = sapply(dats, function(i) cor(i, method = \"pearson\")[1,2]),\n            Spearman = sapply(dats, function(i) cor(i, method = \"spearman\")[1,2]),\n            Kendall = sapply(dats, function(i) cor(i, method = \"kendall\")[1,2])\n      ), 3\n)\n\n```\n\n# TL;DR, just give me the code!\n```{r TLDR, ref.label = knitr::all_labels(), echo=TRUE, eval=FALSE}\n```\n\n# References\n\n## Online resources\n[SAS blogs: introduction to copulas](https://blogs.sas.com/content/iml/2021/07/05/introduction-copulas.html)\n[Simulating Dependent Random Variables Using Copulas](https://www.mbfys.ru.nl/~robvdw/CNP04/LAB_ASSIGMENTS/LAB05_CN05/MATLAB2007b/stats/html/copulademo.html)","srcMarkdownNoYaml":"\n\n# Introduction\n\nThe Normal to anything (or NORTA) is a sampling approach that allows the generation of multivariate data with a known rank correlation structure and arbitrary marginal distributions.\nFor example, you could generate 2 variables $X_1$ and $X_2$ with a given rank correlation and [beta](https://en.wikipedia.org/wiki/Beta_distribution) marginal distributions.\nThe only requirement is that the target marginal distributions need to be continuous distributions with a known [(inverse) cumulative distribution function](https://en.wikipedia.org/wiki/Quantile_function).\n\n# Learn by coding\n\nFor this topic we will need a few packages:\n\n```{r packages, warning = FALSE, message = FALSE}\n# Load pacakges ---------------------------------------------------------------\n\nlibrary(SimCorMultRes)\nlibrary(MASS)\nlibrary(ggplot2)\nlibrary(ggExtra) # for marginal plots\nlibrary(e1071)\nlibrary(sn) # for skewed normal distribution\n\n```\n\nThe NORTA approach can be summarized in three steps:\n\n  1. Sample a data matrix $X_{n \\times p}$ from a Multivariate Normal distribution with target correlation structure\n  2. Transform the distributions of the individual variables $x_j$ for $j = 1, \\dots, p$ (the marginal distributions) to a uniform distribution by applying the normal [CDF](https://en.wikipedia.org/wiki/Cumulative_distribution_function) to $X$ (in R `pnorm()`)\n  3. Transform the uniform marginals to any continuous target distributions by applying the inverse CDF of the target distribution (usually implemented in R by a `qtarget()` function, for example, `qbeta`)\n\n## 1. Sample from a multivariate normal distribution\n\nFirst, we sample 1000 observations from a multivariate normal distribution with four correlated variables ($\\rho = .7$).\n\n```{r MVN}\n# 1. Sample from multivariate normal distribution -----------------------------\n\n# Set the seed\nset.seed(20210422)\n\n# Fix parameters\nn <- 1e3 # smaple size\np <- 2  # number of variables\nmu <- rep(0, p) # vector of means\nSigma <- matrix(.7, nrow = p, ncol = p); diag(Sigma) <- 1 # correlation matrix\n\n# Sample Multivariate Normal data\nX <- mvrnorm(n = n, mu = mu, Sigma = Sigma)\n\n```\n\nWe can then plot a scatterplot of $X_1$ and $X_2$ to study their multivariate distribution and make the marginal plots visible.\n\n```{r}\n# Plot the multivariate distribution (scatterplot)\nX_scatter <- ggplot(data.frame(X), aes(x = X1, y = X2)) +\n      geom_point()\n\n# Add marginals of X\nggMarginal(X_scatter, type = \"histogram\") \n\n```\n\nWe can now transform the marginal distributions of the $x$s to any target continuous distribution.\n\n## 2. Transform normal marginals into uniform\n\nFor example, consider transforming the marginals to a beta distribution. \n\nFirst, we compute the values of the normal cumulative distribution function (`pnorm()`).\n```{r uniform}\n# 2. Transform marginals to a uniform distribution -----------------------------\n\n# Transform to uniform distribution (apply normal CDF to X)\nU <- pnorm(X) \n\n# Make scatterplot\nU_scatter <- ggplot(data.frame(U), aes(x = X1, y = X2)) +\n      geom_point()\n\n# Add marginals of U\nggMarginal(U_scatter, type = \"histogram\") \n\n```\n\n## 3. Transform uniform marginals into anything\n\nThen we compute the quantiles corresponding to the resulting cumulative probabilities based on the target marginal distribution using the `qbeta()` function.\n\n```{r beta}\n# 3. Transform marginals to anything with a (inverse) CDF ----------------------\n\n# > 3.1 Beta -------------------------------------------------------------------\n\n# Transform to a beta distribution\nX_beta <- qbeta(U, shape1 = .5, shape2 = .5)\n\n# And visualize\nX_beta_scatter <- ggplot(data.frame(X_beta), aes(x = X1, y = X2)) +\n      geom_point()\nggMarginal(X_beta_scatter, type = \"histogram\") \n\n```\n\nAs another example, consider transforming the marginal to a highly skewed T distribution.\n\n```{r skew}\n# > 3.2 Skewed-t distribution --------------------------------------------------\n\n# Define the target skewness and kurtosis\nsk <- -2\nkt <- 10\n\n# Define direct parameterization for the skew-t (ST) distribution\ncpST <- c(0, 1, sk, kt)\ndpST <- cp2dp(cpST, family = \"ST\")\n\n# Transform to Skew-t (apply target inverse-CDF to X)\nX_st <- apply(U, 2, qst, dp = dpST)\n\n# And visualize\nX_st_scatter <- ggplot(data.frame(X_st), aes(x = X1, y = X2)) +\n      geom_point()\nggMarginal(X_st_scatter, type = \"histogram\") \n\n```\n\n### 3.1 Preserved multivariate relationships\n\nUpon generating the multivariate data $\\mathbf{X}$, the association between the two variables $X_1$ and $X_2$ is determined by the correlation coefficient $\\rho$ that we used in the `mvrnorm()` call.\nThis coefficient expresses the linear dependence between the two variables which is not preserved when non-linear transformations are applied to the marginals (which we use).\nHowever, the NORTA approach does preserve [rank correlations](https://en.wikipedia.org/wiki/Rank_correlation) between the variables.\nIn the following code, we compute the Pearson correlation (linear dependency), and the Spearman and Kendall's correlations (rank correlations) for the original data, and all other transformations.\n\n```{r}\n# Collect all sampled datasets\ndats <- list(X = X, U = U, skewt = X_st, beta = X_beta)\n\n# Compute all types of correlation on all datasets\nround(\n      data.frame(\n            Pearson = sapply(dats, function(i) cor(i, method = \"pearson\")[1,2]),\n            Spearman = sapply(dats, function(i) cor(i, method = \"spearman\")[1,2]),\n            Kendall = sapply(dats, function(i) cor(i, method = \"kendall\")[1,2])\n      ), 3\n)\n\n```\n\nAs you can see, the NORTA sampling approach allows us to easily sample dependent multivariate data with arbitrary marginal distributions and known target (rank) correlations.\n\n### 3.2 Discrete distributions\n\nOne can be tempted to use any marginal distribution, even discrete distributions. However, the rank correlation is not preserved when this marginal transformation is applied.\nConsider for example transforming the marginals to Poisson distributions:\n\n```{r poissan}\n# > 3.3 Poissan distribution ---------------------------------------------------\n\n# Transform to poissan (apply target inverse-CDF to X)\nX_pois <- qpois(U, lambda = 2)\n\n# And visualize\nX_pois_scatter <- ggplot(data.frame(X_pois), aes(x = X1, y = X2)) +\n      geom_point()\nggMarginal(X_pois_scatter, type = \"histogram\") \n\n```\n\nor to binomial distributions\n\n```{r binomial}\n# > 3.4 Binomial distribution ---------------------------------------------------\n\n# Transform to binomial\nX_binom <- qbinom(U, size = 6, prob = .2)\n\n# And visualize\nX_binom_scatter <- ggplot(data.frame(X_binom), aes(x = X1, y = X2)) +\n      geom_point()\nggMarginal(X_binom_scatter, type = \"histogram\") \n\n```\n\nif you check again both the linear and rank correlations you will notice that both have been impacted by these transformations:\n\n```{r}\n# Add the other datasets\ndats <- list(\n            X = X, \n            U = U, \n            skewt = X_st, \n            beta = X_beta, \n            poissan = X_pois, \n            binomial = X_binom\n)\n\n# Compute all types of correlation on all datasets\nround(\n      data.frame(\n            Pearson = sapply(dats, function(i) cor(i, method = \"pearson\")[1,2]),\n            Spearman = sapply(dats, function(i) cor(i, method = \"spearman\")[1,2]),\n            Kendall = sapply(dats, function(i) cor(i, method = \"kendall\")[1,2])\n      ), 3\n)\n\n```\n\n# TL;DR, just give me the code!\n```{r TLDR, ref.label = knitr::all_labels(), echo=TRUE, eval=FALSE}\n```\n\n# References\n\n## Online resources\n[SAS blogs: introduction to copulas](https://blogs.sas.com/content/iml/2021/07/05/introduction-copulas.html)\n[Simulating Dependent Random Variables Using Copulas](https://www.mbfys.ru.nl/~robvdw/CNP04/LAB_ASSIGMENTS/LAB05_CN05/MATLAB2007b/stats/html/copulademo.html)"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"norta.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","title-block-banner":true,"draft":false,"title":"Normal to anything (NORTA) sampling","author":"Edoardo Costantini","date":"2022-10-26","slug":"norta","categories":["distributions"],"bibliography":["../../resources/bibshelf.bib"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}