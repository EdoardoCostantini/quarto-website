{"title":"Normal to anything (NORTA) sampling","markdown":{"yaml":{"draft":false,"title":"Normal to anything (NORTA) sampling","author":"Edoardo Costantini","date":"2022-10-26","slug":"norta","categories":["distributions"],"bibliography":"../../resources/bibshelf.bib"},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\nThe Normal to anything (or NORTA) is a sampling approach that allows to generate multivariate data with a known correlation structure and arbitrary marginal distributions.\nFor example, you could generate 2 variables with a given correlation structure and [poissan](https://en.wikipedia.org/wiki/Poisson_distribution) marginal distirbutinos.\nThe only requirement is that the target marginal distributions need to have an [(inverse) cumulative distribution function](https://en.wikipedia.org/wiki/Quantile_function).\n\n# Learn by coding\n\nFor this topic we will need a few packages:\n\n```{r packages}\n# Load pacakges ---------------------------------------------------------------\n\nlibrary(SimCorMultRes)\nlibrary(MASS)\nlibrary(ggplot2)\nlibrary(ggExtra) # for marginal plots\nlibrary(e1071)\n\n```\n\nThe norta approach can be summarized in three steps:\n\n  1. Sample a data matrix $X_{n \\times p}$ from a Multivariate Normal distribution with target correlation structure\n  2. Transform the distributions of the individual variables $x_j$ for $j = 1, \\dots, p$ (the marginal distributions) to a uniform distirbutino by applying the normal [CDF](https://en.wikipedia.org/wiki/Cumulative_distribution_function) to $X$ (in R `pnorm()`)\n  3. Transform the uniform marginals to any target distributinos by applying the inverse CDF of the targe distribution (usually implemented in R by a `qtarget()` function, for example `qpois()` or `qbeta`)\n\n## Sample from multivariate normal distribution\n\nFirst we sample 1000 observations from a multivariate normal distirbution with four correlated variables ($\\rho = .7$).\n\n```{r MVN}\n# 1. Sample from multivariate normal distribution -----------------------------\n\n# Set the seed\nset.seed(20210422)\n\n# Fix parameters\nn <- 1e3 # smaple size\np <- 2  # number of variables\nmu <- rep(0, p) # vector of means\nSigma <- matrix(.7, nrow = p, ncol = p); diag(Sigma) <- 1 # correlation matrix\n\n# Sample Multivairate Normal data\nX <- mvrnorm(n = n, mu = mu, Sigma = Sigma)\n\n# Plot the multivariate distribution (scatterplot)\nX_scatter <- ggplot(data.frame(X), aes(x = X1, y = X2)) +\n      geom_point()\n\n# Add marginals of X\nggMarginal(X_scatter, type = \"histogram\") \n\n```\n\n## Transform normal marginals to uniform\n\nWe can now transform the marginal distributions fo the $x$s to any target paramteric distribution. For example, consider transforming the marginals to poissan distributions. First, we compute the values of the normal cumulative distribution function (`pnorm()`) and then we compute the quantiles corresponding to the resulting cumulative probabilities based on the target marginal distribution using the `qpois()` function.\n\n```{r uniform}\n# 2. Transform marginals to a uniform distribution -----------------------------\n\n# Transform to uniform distribution (apply normal CDF to X)\nU <- pnorm(X) \n\n# Make scatterplot\nU_scatter <- ggplot(data.frame(U), aes(x = X1, y = X2)) +\n      geom_point()\n\n# Add marginals of U\nggMarginal(U_scatter, type = \"histogram\") \n\n```\n\n## Transform uniform marginals to anything\n\n```{r poissan}\n# 3. Transform marginals to anything with a (inverse) CDF ----------------------\n\n# Transform to poissan (apply target inverse-CDF to X)\nX_pois <- qpois(U, lambda = 2)\n\n# And visualize\nX_pois_scatter <- ggplot(data.frame(X_pois), aes(x = X1, y = X2)) +\n      geom_point()\nggMarginal(X_pois_scatter, type = \"histogram\") \n\n```\n\nAs another example, consider transforming the marginals to uniform distributions:\n\n```{r beta}\n# Transform to a beta distribution\nX_beta <- qbeta(U, shape1 = .5, shape2 = .5)\n\n# And visualize\nX_beta_scatter <- ggplot(data.frame(X_beta), aes(x = X1, y = X2)) +\n      geom_point()\nggMarginal(X_beta_scatter, type = \"histogram\") \n\n```\n\nWe can use this procedure to transform the marginal distribution to any target distribution.\n\n## Check correlation between the variables is still the same\n\nWe can see that the relatinoship between $X1$ and $X2$ is still the same.\n\n```{r visualize-multivariate}\n# Check that the multivariate distribution is still the same\npar(mfrow = c(1, 3))\n\n# Plot linear relationship between normal x1 and x2 (original data)\nplot(X[, 1], X[, 2], \n    main = paste0(\"Normal marginals, cor = \", round(cor(X)[1, 2], 3)), \n    xlab = \"x1\", ylab = \"x2\"\n    )\n\n# Plot linear relationship between normal x1 and x2 (original data)\nplot(X_pois[, 1], X_pois[, 2], \n    main = paste0(\"Poissan marginals, cor = \", round(cor(X_pois)[1, 2], 3)), \n    xlab = \"x1\", ylab = \"x2\"\n    )\nabline(lm(X_pois[, 1] ~ X_pois[, 2]), col = \"blue\", lwd = 3)\n\n# Plot linear relationship between normal x1 and x2 (original data)\nplot(X_beta[, 1], X_beta[, 2], \n    main = paste0(\"Beta marginals, cor = \", round(cor(X_beta)[1, 2], 3)), \n    xlab = \"x1\", ylab = \"x2\"\n    )\nabline(lm(X_beta[, 1] ~ X_beta[, 2]), col = \"blue\", lwd = 3)\n\n```\n\n# TL;DR, just give me the code!\n```{r TLDR, ref.label = knitr::all_labels(), echo=TRUE, eval=FALSE}\n```\n\n# References\n\n## Online resources\n[SAS blogs: introduction to copulas](https://blogs.sas.com/content/iml/2021/07/05/introduction-copulas.html)"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"norta.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.251","theme":{"light":["flatly","light.scss"],"dark":["darkly","dark.scss"]},"title-block-banner":true,"draft":false,"title":"Normal to anything (NORTA) sampling","author":"Edoardo Costantini","date":"2022-10-26","slug":"norta","categories":["distributions"],"bibliography":["../../resources/bibshelf.bib"]},"extensions":{"book":{"multiFile":true}}}}}