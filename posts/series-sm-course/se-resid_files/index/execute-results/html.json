{
  "hash": "56cc29fb37e9ffce6334730fb79ed0dc",
  "result": {
    "markdown": "---\ntitle: Understanding the residual standard error\nauthor: Edoardo Costantini\ndate: '2022-06-22'\nslug: residual-standard-error\ncategories: [\"Knowledge snippet\", \"linear models\", \"ols\"]\n---\n\n\n## Introduction\n\nThe residual standard error is a measure of fit for linear regression models. \nConceptually, it can be thought of as the variability of the prediction error for a linear model.\nIt is usually calculated as:\n\n$$\nSE_{resid} = \\sqrt{ \\frac{ \\sum^{n}_{i = 1}(y_i - \\hat{y}_i)^2 }{df_{resid}} }\n$$\n\nwhere:\n\n- $n$ is the sample size\n- $k$ is the number of parameters to estimate in the model \n- $-1$ is the degree of freedom lost to estimate the intercept\n- $\\hat{y}_i$ is the fitted $y$ value for the $i$-th individual\n- $df_{resid}$ is the degrees of freedom of the residuals ($n - k - 1$)\n\nThe smaller the residual standard error, the better the model fits the data.\n\n## Learn by coding\n\nWe can compute the residual standard error manually after estimating a linear model in R.\nTo get a better grasp of the residual standard error, let's start by regressing the miles per gallon (mpg) on the number of cylinders (cyl), horsepower (hp), and weight (wt) of cars from the standard `mtcars` R dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit a linear model -----------------------------------------------------------\n\n  lm_fit <- lm(mpg ~ cyl + hp + wt, data = mtcars)\n```\n:::\n\n\nWe can compute the residual standard error following the formula described above:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute the residual standard error manually ---------------------------------\n\n  # Define elements of the formula\n  n <- nrow(mtcars) # sample size\n  k <- 3            # number of parameters (regression coefficients)\n  yhat <- fitted(lm_fit) # fitted y values\n  y <- mtcars$mpg\n\n  # Compute rse\n  rse <- sqrt(sum((y - yhat)^2) / (n - k - 1))\n\n  # Print rse\n  rse\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.511548\n```\n:::\n:::\n\n\nWe can also extract it directly from any `lm` object:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# residual standard error from lm output ---------------------------------------\n\n  # Use the sigma function to extract it from an lm object\n  sigma(lm_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.511548\n```\n:::\n\n```{.r .cell-code}\n  # Compare with the manual computation\n  sigma(lm_fit) - rse\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\n## TL;DR, just give me the code!\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit a linear model -----------------------------------------------------------\n\n  lm_fit <- lm(mpg ~ cyl + hp + wt, data = mtcars)\n\n# Compute the residual standard error manually ---------------------------------\n\n  # Define elements of the formula\n  n <- nrow(mtcars) # sample size\n  k <- 3            # number of parameters (regression coefficients)\n  yhat <- fitted(lm_fit) # fitted y values\n  y <- mtcars$mpg\n\n  # Compute rse\n  rse <- sqrt(sum((y - yhat)^2) / (n - k - 1))\n\n  # Print rse\n  rse\n\n# residual standard error from lm output ---------------------------------------\n\n  # Use the sigma function to extract it from an lm object\n  sigma(lm_fit)\n\n  # Compare with the manual computation\n  sigma(lm_fit) - rse\n```\n:::\n\n\n## Other resources\n\n- [Statology: How to Interpret Residual Standard Error](https://www.statology.org/how-to-interpret-residual-standard-error/)\n- [Statology: How to Calculate Residual Standard Error in R](https://www.statology.org/residual-standard-error-r/)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}